class Solution {
    public int[] productExceptSelf(int[] nums) {
         int n = nums.length;
        int[] leftProducts = new int[n];
        int[] rightProducts = new int[n];
        int[] output = new int[n];
        
        // Sol çarpımları hesapla
        leftProducts[0] = 1;
        for (int i = 1; i < n; i++) {
            leftProducts[i] = leftProducts[i-1] * nums[i-1];
        }
        
        // Sağ çarpımları hesapla
        rightProducts[n-1] = 1;
        for (int i = n-2; i >= 0; i--) {
            rightProducts[i] = rightProducts[i+1] * nums[i+1];
        }
        
        // Sol ve sağ çarpımları çarp
        for (int i = 0; i < n; i++) {
            output[i] = leftProducts[i] * rightProducts[i];
        }
        
        return output;
    }
}

//short form
/*
        int n = nums.length;
        int[] output = new int[n];
        
        // İlk geçiş: Soldan sağa çarpımları hesapla
        int leftProduct = 1;
        for (int i = 0; i < n; i++) {
            output[i] = leftProduct;
            leftProduct *= nums[i];
        }
        
        // İkinci geçiş: Sağdan sola çarpımları hesapla ve sonuçları güncelle
        int rightProduct = 1;
        for (int i = n - 1; i >= 0; i--) {
            output[i] *= rightProduct;
            rightProduct *= nums[i];
        }
        
        return output;
*/
